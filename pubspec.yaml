name: familynest
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+5

environment:
  sdk: ^3.7.2

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  http: ^1.1.0
  http_mock_adapter: ^0.4.4
  http_parser: ^4.0.2
  image_picker: ^1.0.4
  file_picker: ^10.1.9
  shared_preferences: ^2.2.2
  video_player: ^2.9.5
  webview_flutter: ^4.0.0
  path_provider: ^2.1.5
  chewie: ^1.11.3
  intl: ^0.18.1
  mask_text_input_formatter: ^2.5.0
  device_info_plus: ^11.5.0  # For detecting device type (emulator vs real device)
  flutter_dotenv: ^5.1.0  # For reading .env configuration files
  provider: ^6.1.1
  just_audio: ^0.9.36
  audioplayers: ^5.2.1
  sticky_headers: ^0.2.0
  permission_handler: ^11.3.1
  # Google Drive API dependencies
  googleapis: ^13.2.0
  google_sign_in: ^6.2.1
  extension_google_sign_in_as_googleapis_auth: ^2.0.12
  # Firebase dependencies for push notifications
  firebase_core: ^3.2.0
  firebase_messaging: ^15.1.0
  flutter_local_notifications: ^17.0.0  # Sharing functionality
  share_plus: ^11.0.0
  # URL launching functionality
  url_launcher: ^6.2.5

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2
  cached_network_image: ^3.4.1
  flutter_cache_manager: ^3.3.1
  video_compress: ^3.1.4
  crypto: ^3.0.6
  web_socket_channel: ^2.4.0
  stomp_dart_client: ^0.4.4
  visibility_detector: ^0.4.0  # For tracking message visibility/read status
  
dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0
  mockito: ^5.4.2
  build_runner: ^2.4.6
 
# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - .env
    - .env.development
    - assets/1747416846910_scaled_35.jpg
    - assets/mytest.jpg
    - assets/sounds/like.mp3
    - assets/sounds/love.mp3
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
